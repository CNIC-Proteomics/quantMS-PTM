Bootstrap: library
From: ubuntu:22.04

%labels
    Author jmrodriguezc@cnic.es
    Version v0.0.1

%help
    This Singularity container is used for the search engine:
    1. Obtain the DECOY using the DecoyPYrat (modified by jmrodriguezc)
        https://www.sanger.ac.uk/science/tools/decoypyrat

    2. Convert the raw file to mZML format using the ThermoRawFileParser:
        https://github.com/compomics/ThermoRawFileParser
        https://pubmed.ncbi.nlm.nih.gov/31755270/

    3. Execution of MSFragger:
        https://msfragger.nesvilab.org/


%setup
    # Create the MSFragger home
    MSF_HOME=/opt/msfragger
    mkdir -p "${SINGULARITY_ROOTFS}${MSF_HOME}"

    # Create the ThermoRawFileParser home
    MSF_HOME=/opt/thermorawfileparser
    mkdir -p "${SINGULARITY_ROOTFS}${MSF_HOME}"

%environment
    # Export the MSFragger home for env
    MSF_HOME=/opt/msfragger
    export MSF_HOME

%files
    # Obtain the MSFragger file
    MSFragger-3.8/MSFragger-3.8.jar /opt/msfragger/MSFragger.jar
    MSFragger-3.8/ext /opt/msfragger

    # Obtain ThermoRawFileParser
    ThermoRawFileParser1.4.2.zip /opt/ThermoRawFileParser.zip

    # Copy Python requirements
    python_requirements.txt /opt/

%environment
    MSF_HOME=/opt/msfragger
    export MSF_HOME

%post
    # Update the packages
    apt-get update -y

    # Requirements for MSFragger
    apt-get install -y openjdk-19-jre-headless

    # Requeriments for ThermoRawFileParser
    apt-get install -y ca-certificates gnupg
    # install mono (ThermoRawFileParser)
    gpg --homedir /tmp --no-default-keyring --keyring /usr/share/keyrings/mono-official-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    echo "deb [signed-by=/usr/share/keyrings/mono-official-archive-keyring.gpg] https://download.mono-project.com/repo/ubuntu stable-focal main" | tee /etc/apt/sources.list.d/mono-official-stable.list
    apt-get update -y
    apt-get install -y mono-devel
    apt-get install -y unzip

    # Requirements for DecoyPYrat
    apt-get -y install python-is-python3 python3-pip
    DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata python3-tk
    apt-get -y install git
    # Install Python packages
    pip install -r /opt/python_requirements.txt


    # Uncompress thermorawfileparser
    unzip /opt/ThermoRawFileParser.zip -d /opt/thermorawfileparser

    # Clone the CNIC dbscripts repository that contains the DecoyPYrat
    git clone https://github.com/CNIC-Proteomics/iSanXoT-dbscripts.git /opt/dbscripts

    # Clone the programa that extract the qauntifications
    git clone https://github.com/CNIC-Proteomics/mz_extractor.git /opt/mz_extractor


    # To end the build
    NOW=`date`
    echo "export NOW=\"${NOW}\"" >> $SINGULARITY_ENVIRONMENT

%runscript
    echo "Container was created $NOW"
    echo "Arguments received: $*"
    exec echo "$@"

%test
    # Check if Ubuntu has been installed
    grep -q NAME=\"Ubuntu\" /etc/os-release
    if [ $? -eq 0 ]; then
        echo "Container base is Ubuntu as expected."
    else
        echo "Container base is not Ubuntu."
        exit 1
    fi

    # Check if Java has been installed
    JAVA_VER=$(java -version 2>&1 >/dev/null | egrep "\S+\s+version" | awk '{print $3}' | tr -d '"')
    if [ "${JAVA_VER}" != "" ]; then
        echo "Java ${JAVA_VER} has been installed as expected."
    else
        echo "Java has not been installed."
        exit 1
    fi

    # Check if Python has been installed
    PYTHON_VER=$(python --version | awk '{print $2}' | tr -d '"')
    if [ "${PYTHON_VER}" != "" ]; then
        echo "Python ${PYTHON_VER} has been installed as expected."
    else
        echo "Python has not been installed."
        exit 1
    fi

    # Check if MSFragger has been installed
    FILE=/opt/msfragger/MSFragger.jar
    if [ -f "${FILE}" ]; then
        echo "The ${FILE} file exists."
    else
        echo "The ${FILE} file does not exit."
        exit 1
    fi

    # Check if DecoyPYrat has been installed
    FILE=/opt/dbscripts/src/decoyPYrat.v2.py
    if [ -f "${FILE}" ]; then
        echo "The ${FILE} file exists."
    else
        echo "The ${FILE} file does not exit."
        exit 1
    fi
